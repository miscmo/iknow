// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: proto/iknow.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RspCode int32

const (
	RspCode_Success        RspCode = 0
	RspCode_ParamInvild    RspCode = 1
	RspCode_UpdateDBFailed RspCode = 2
)

// Enum value maps for RspCode.
var (
	RspCode_name = map[int32]string{
		0: "Success",
		1: "ParamInvild",
		2: "UpdateDBFailed",
	}
	RspCode_value = map[string]int32{
		"Success":        0,
		"ParamInvild":    1,
		"UpdateDBFailed": 2,
	}
)

func (x RspCode) Enum() *RspCode {
	p := new(RspCode)
	*p = x
	return p
}

func (x RspCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RspCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iknow_proto_enumTypes[0].Descriptor()
}

func (RspCode) Type() protoreflect.EnumType {
	return &file_proto_iknow_proto_enumTypes[0]
}

func (x RspCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RspCode.Descriptor instead.
func (RspCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{0}
}

type NoteDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Diff       string `protobuf:"bytes,2,opt,name=diff,proto3" json:"diff,omitempty"`
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	CreateTime string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime string `protobuf:"bytes,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *NoteDiff) Reset() {
	*x = NoteDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteDiff) ProtoMessage() {}

func (x *NoteDiff) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteDiff.ProtoReflect.Descriptor instead.
func (*NoteDiff) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{0}
}

func (x *NoteDiff) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NoteDiff) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

func (x *NoteDiff) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NoteDiff) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NoteDiff) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc       string      `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Content    string      `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Type       int32       `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Diff       []*NoteDiff `protobuf:"bytes,6,rep,name=diff,proto3" json:"diff,omitempty"`
	CreateTime string      `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime string      `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{1}
}

func (x *Note) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Note) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Note) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Note) GetDiff() []*NoteDiff {
	if x != nil {
		return x.Diff
	}
	return nil
}

func (x *Note) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Note) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type       int32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Notes      []int64 `protobuf:"varint,4,rep,packed,name=notes,proto3" json:"notes,omitempty"`
	SubNodes   []int64 `protobuf:"varint,5,rep,packed,name=subNodes,proto3" json:"subNodes,omitempty"`
	Collapse   bool    `protobuf:"varint,6,opt,name=collapse,proto3" json:"collapse,omitempty"`
	Score      int32   `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	Permission int32   `protobuf:"varint,8,opt,name=permission,proto3" json:"permission,omitempty"`
	CreateTime string  `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime string  `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Node) GetNotes() []int64 {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *Node) GetSubNodes() []int64 {
	if x != nil {
		return x.SubNodes
	}
	return nil
}

func (x *Node) GetCollapse() bool {
	if x != nil {
		return x.Collapse
	}
	return false
}

func (x *Node) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Node) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *Node) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Node) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type SearchNodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page     int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *SearchNodesReq) Reset() {
	*x = SearchNodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNodesReq) ProtoMessage() {}

func (x *SearchNodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNodesReq.ProtoReflect.Descriptor instead.
func (*SearchNodesReq) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{3}
}

func (x *SearchNodesReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchNodesReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchNodesReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchNodesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  RspCode `protobuf:"varint,1,opt,name=code,proto3,enum=main.RspCode" json:"code,omitempty"`
	Msg   string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Nodes []*Node `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *SearchNodesRsp) Reset() {
	*x = SearchNodesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNodesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNodesRsp) ProtoMessage() {}

func (x *SearchNodesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNodesRsp.ProtoReflect.Descriptor instead.
func (*SearchNodesRsp) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{4}
}

func (x *SearchNodesRsp) GetCode() RspCode {
	if x != nil {
		return x.Code
	}
	return RspCode_Success
}

func (x *SearchNodesRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchNodesRsp) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type AddNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes  []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Parent int64   `protobuf:"varint,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *AddNodeReq) Reset() {
	*x = AddNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeReq) ProtoMessage() {}

func (x *AddNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeReq.ProtoReflect.Descriptor instead.
func (*AddNodeReq) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{5}
}

func (x *AddNodeReq) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *AddNodeReq) GetParent() int64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

type AddNodeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RspCode `protobuf:"varint,1,opt,name=code,proto3,enum=main.RspCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddNodeRsp) Reset() {
	*x = AddNodeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iknow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeRsp) ProtoMessage() {}

func (x *AddNodeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iknow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeRsp.ProtoReflect.Descriptor instead.
func (*AddNodeRsp) Descriptor() ([]byte, []int) {
	return file_proto_iknow_proto_rawDescGZIP(), []int{6}
}

func (x *AddNodeRsp) GetCode() RspCode {
	if x != nil {
		return x.Code
	}
	return RspCode_Success
}

func (x *AddNodeRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_proto_iknow_proto protoreflect.FileDescriptor

var file_proto_iknow_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6b, 0x6e, 0x6f, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x4e, 0x6f,
	0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x69, 0x66, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x74,
	0x65, 0x44, 0x69, 0x66, 0x66, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x50, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x67, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x73, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0x3b, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x6c, 0x64, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0x02, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_iknow_proto_rawDescOnce sync.Once
	file_proto_iknow_proto_rawDescData = file_proto_iknow_proto_rawDesc
)

func file_proto_iknow_proto_rawDescGZIP() []byte {
	file_proto_iknow_proto_rawDescOnce.Do(func() {
		file_proto_iknow_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_iknow_proto_rawDescData)
	})
	return file_proto_iknow_proto_rawDescData
}

var file_proto_iknow_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_iknow_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_iknow_proto_goTypes = []interface{}{
	(RspCode)(0),           // 0: main.RspCode
	(*NoteDiff)(nil),       // 1: main.NoteDiff
	(*Note)(nil),           // 2: main.Note
	(*Node)(nil),           // 3: main.Node
	(*SearchNodesReq)(nil), // 4: main.SearchNodesReq
	(*SearchNodesRsp)(nil), // 5: main.SearchNodesRsp
	(*AddNodeReq)(nil),     // 6: main.AddNodeReq
	(*AddNodeRsp)(nil),     // 7: main.AddNodeRsp
}
var file_proto_iknow_proto_depIdxs = []int32{
	1, // 0: main.Note.diff:type_name -> main.NoteDiff
	0, // 1: main.SearchNodesRsp.code:type_name -> main.RspCode
	3, // 2: main.SearchNodesRsp.nodes:type_name -> main.Node
	3, // 3: main.AddNodeReq.nodes:type_name -> main.Node
	0, // 4: main.AddNodeRsp.code:type_name -> main.RspCode
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_iknow_proto_init() }
func file_proto_iknow_proto_init() {
	if File_proto_iknow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_iknow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iknow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iknow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iknow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iknow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNodesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iknow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iknow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_iknow_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_iknow_proto_goTypes,
		DependencyIndexes: file_proto_iknow_proto_depIdxs,
		EnumInfos:         file_proto_iknow_proto_enumTypes,
		MessageInfos:      file_proto_iknow_proto_msgTypes,
	}.Build()
	File_proto_iknow_proto = out.File
	file_proto_iknow_proto_rawDesc = nil
	file_proto_iknow_proto_goTypes = nil
	file_proto_iknow_proto_depIdxs = nil
}
